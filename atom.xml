<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Laura Lindzey]]></title>
  <link href="http://lindzey.github.io/atom.xml" rel="self"/>
  <link href="http://lindzey.github.io/"/>
  <updated>2015-07-28T01:52:48-05:00</updated>
  <id>http://lindzey.github.io/</id>
  <author>
    <name><![CDATA[Laura Lindzey]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A brief introduction to Ice-Penetrating radar]]></title>
    <link href="http://lindzey.github.io/blog/2015/07/27/a-brief-intro-to-ice-penetrating-radar/"/>
    <updated>2015-07-27T23:00:00-05:00</updated>
    <id>http://lindzey.github.io/blog/2015/07/27/a-brief-intro-to-ice-penetrating-radar</id>
    <content type="html"><![CDATA[<p> <img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/TOT.JKB2d.X16a_plain.png" width="675"></p>

<p>I&rsquo;ve been working with ice-penetrating radar data for years, and I still think it&rsquo;s so flipping cool that we can see through kilometers of ice using radar.
This is possible because ice is mostly transparent to electromagnetic energy at radar frequencies.
We see reflections at the air/ice interface, within the ice where its properties change, and at the ice/rock (or ice/water) interface.
As the plane flies, the radar transmits 6250 pulses every second.
After each pulse, it listens for reflected energy; this returned signal is what you&rsquo;re looking at in the radargram.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<!-- more -->


<p>Over the last few decades<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>, my group has collected airborne ice-penetrating data all over Antarctica:</p>

<p><img src="http://lindzey.github.io/images/what_does_radar_data_look_like/all_UTIG_0.png" width="500"></p>

<p>In order to collect this data, we mount antennas and recording equipment on a modified DC3. These are unpressurized WWII-era airplanes that have been updated with new engines. The left image below shows JKB taking off from the Casey skiway; the right image shows one of my colleagues monitoring the instruments during a flight.</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/JKB_antennas.jpg" width="400">
<img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/JKB_racks.jpg" width="275"></p>

<p>I spend a lot of time studying radar profiles like the one below.
The x-axis is distance along the flight line, and the y-axis is height.<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup> In effect, we&rsquo;re looking at a slice of the ice sheet.
White corresponds to a strong reflection, and we can clearly see the surface and bed all along the transect.
This particular profile is running along the Totten Ice Shelf; it is highlighted in red on the right (zoomed-in) image below.
The star indicates the start of the profile.
Note how the bed signal gets weaker as we cross the grounding zone - radar energy reflects more strongly from water than from rock.</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/TOT.JKB2d.X16a_full.png" width="675"></p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/TOT_JKB2d_X16a_2.png" width="245">
<img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/TOT_JKB2d_X16a_1.png" width="223">
<img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/TOT_JKB2d_X16a_0.png" width="202"></p>

<p>Totten Glacier is interesting because it is losing mass relatively quickly, as determined by satellite gravity<sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup> and  altimetry.<sup id="fnref:5"><a href="#fn:5" rel="footnote">5</a></sup> Among other things, radar data is used in areas like this to better determine the location of the grounding line and to calculate the volume of ice in the drainage feeding an outlet glacier.<sup id="fnref:6"><a href="#fn:6" rel="footnote">6</a></sup></p>

<h3>Multiple Reflections</h3>

<p>When looking at radargrams, another thing to watch out for are multiple reflections, which can be confused for the bed or a layer.
These most commonly occur when the radar energy bounces back off the plane, to the surface, and back to the plane.
It is possible to distinguish such a multiple from a true layer because it is always the same distance below the surface as the plane is above the surface, which means that the multiple&rsquo;s apparent slope is twice that of the surface&rsquo;s.
An example of this type of multiple can be found in the Totten transect above.
Below, we have data from over the Ross Ice Shelf.
The ice shelf is thin enough, and the bottom echo strong enough, that we see multiples due to the radar energy bouncing between the ice&rsquo;s interfaces, as well as back off the plane.</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/MIS.JKB2e.Y25a_full.png" width="675"></p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/MIS_JKB2e_Y25a_2.png" width="245">
<img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/MIS_JKB2e_Y25a_1.png" width="223">
<img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/MIS_JKB2e_Y25a_0.png" width="202"></p>

<h3>Beam Pattern</h3>

<p>Radar data can be more difficult to interpret than laser data because the beam pattern is not anywhere near as focused. This means that the energy received at a given point in space is not necessarily a reflection from directly below the airplane, as would be most convenient/intuitive to assume. On our airplane, the along-track pattern is a single lobe with half power at 152-degrees (below, left). Cross-track, the first lobe is at 22-degrees, and is only 2.4dB weaker than the main lobe directly below the airplane (below, right).</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/jkb-geardown-side.png" width="245">
<img class="right" src="http://lindzey.github.io/images/what_does_radar_data_look_like/jkb-geardown-front.png" width="310"></p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/beam_pattern_along_track.png" width="350">
<img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/beam_pattern_cross_track.png" width="350">
(Figures from<sup id="fnref:7"><a href="#fn:7" rel="footnote">7</a></sup>, showing the antenna&rsquo;s gain in dB as a function of angle.)</p>

<h3>Reflections from the side</h3>

<p>The previous radargram has an undulating surface that could be confused for the bottom of an ice shelf.
However, looking at a map, we can see that this region is either open water or sea ice. The location of the ice shelf&rsquo;s edge roughly matches the reflector&rsquo;s geometry, so this is actually the side of the ice shelf reflecting energy from one of the sidelobes!
Echoes off to the side aren&rsquo;t always so easy to interpret.
Here&rsquo;s a more confusing transect flying along a valley:</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/ICP2.JKB1a.F09T01a_full.png" width="675"></p>

<p>A number of research groups are actively working on how to determine whether a signal is a side echo or originates from directly below the aircraft, but it&rsquo;s not yet a solved problem. Techniques that have been tried include recording from multiple antennas at the same time and comparing the phase difference<sup id="fnref:8"><a href="#fn:8" rel="footnote">8</a></sup>, or comparing the radar data to a known elevation map of the surface.<sup id="fnref:9"><a href="#fn:9" rel="footnote">9</a></sup></p>

<h3>Reflections from ahead/behind</h3>

<p>The wide beam pattern along-track also means that a strong reflector will be seen long before/after we actually fly over it.
These show up as hyperbolas in the radargram, as illustrated in the cartoon below:</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/hyperbola_geometry_jkb.png" width="500"></p>

<p>Crevasses are very good reflectors since a corner will reflect energy along the same path that it came in on.
They show up well in some regions of the Totten Ice Shelf transect above.
Man-made structures also show up as strong reflectors. In the radargram below, we see South Pole Station as a set of hyperbolas. Their peaks appear below the surface reflection because this transect didn&rsquo;t directly cross the station - it was about a kilometer to the side.</p>

<p>There are existing processing techniques for dealing with a wide along-track beam angle that reduce the appearance of hyperbolas. The basic idea is that you&rsquo;ve observed the same location from a number of different positions as you&rsquo;re flying over it, and can use that redundancy to figure out where the &ldquo;real&rdquo; reflector is,<sup id="fnref:10"><a href="#fn:10" rel="footnote">10</a></sup> but the details are a topic for another post.</p>

<p><img class="left" src="http://lindzey.github.io/images/what_does_radar_data_look_like/NPX.SJB2.NPX02a_full.png" width="675"></p>

<p>The radargram above has striking layers which are also wonderfully useful for modelling the ice sheet. A lot of work is done to correlate layers observed in radargrams to ice properties directly measured from a drilled core. This is analogous to studying tree rings, but over a much longer time frame. There are ice cores from East Antarctica that provide a climate record for the last 800,000 years.<sup id="fnref:11"><a href="#fn:11" rel="footnote">11</a></sup> Once you have this correlation, and if you can trace a continuous layer across a region, you then know the age-depth relationship for the ice sheet. The deformation of layers also contains information about how the ice has been moving.</p>

<p>A colleague claims that no presentation about Antarctica is complete without a penguin. They&rsquo;re far too small to show up in radar data, but here&rsquo;s a picture of a pair from Shirley Island, near Casey Station:</p>

<p><img src="http://lindzey.github.io/images/what_does_radar_data_look_like/pair_of_penguins.jpg" width="675"></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>We transmit a 1us chirped pulse, with a 15MHz bandwidth centered around 60MHz. We digitize the returned signal at 50MHz, and stack 32 traces before recording to disk. The recorded signal is dechirped and stacked again to create the images I&rsquo;m showing here, but those are details for another post.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
<li id="fn:2">
<p>I was looking for extra storage space in the office the other day, and ran across a fantastic filing cabinet: the top three drawers had data on 3 different generations of tape: LTO3, which we&rsquo;re only just now phasing out for LTO6, one that looked more like a cassette tape, and one set of huge spools that were labeled &ldquo;800Bytes per Inch&rdquo;, and dated from the early 1980&rsquo;s. The bottom drawer contained a few rolls of photographic paper - still smelling of darkroom chemicals! - with radar transects printed on them, dating from 1979.<a href="#fnref:2" rev="footnote">&#8617;</a></p></li>
<li id="fn:3">
<p>More precisely, both axes are in units of time - each column of the image corresponds to the information received from a single pulse of the radar, and the the rows are how much time has passed since the transmission.<a href="#fnref:3" rev="footnote">&#8617;</a></p></li>
<li id="fn:4">
<p>Chen, J. L., Wilson, C. R., Blankenship, D., and Tapley, B. D. Accelerated Antarctic ice loss from satellite gravity measurements. Nature Geoscience 2, 12 (2009), 859–862.<a href="#fnref:4" rev="footnote">&#8617;</a></p></li>
<li id="fn:5">
<p>Pritchard, H. D., Arthern, R. J., Vaughan, D. G., and Edwards, L. A. Extensive dynamic thinning on the margins of the Greenland and Antarctic ice sheets. Nature 461, 7266 (2009), 971–975.<a href="#fnref:5" rev="footnote">&#8617;</a></p></li>
<li id="fn:6">
<p>Greenbaum, J. S., Blankenship, D. D., Young, D. A., Richter, T. G., Aitken, A. R. A., Legresy, B., Schroeder, D. M., Roberts, J. L., Warner, R. C., van Ommen, T. D., and Siegert, M. J. Increased Ocean Access to Totten Glacier, East Antarctica. Nature Geos (2015).<a href="#fnref:6" rev="footnote">&#8617;</a></p></li>
<li id="fn:7">
<p>Peters, M. E., Blankenship, D. D., Carter, S. P., Kempf, S. D., Young, D. A., and Holt, J. W. Along-track focusing of airborne radar sounding data from West Antarctica for improving basal reflection analysis and layer detection. Geoscience and Remote Sensing, IEEE Transactions on 45, 9 (2007), 2725–2736.<a href="#fnref:7" rev="footnote">&#8617;</a></p></li>
<li id="fn:8">
<p>Gogineni, S., YAN, J., Paden, J., Leuschen, C., Li, J., Rodriguez-Morales, F., Braaten, D., Purdon, K., Wang, Z., Liu, W., et al. Bed topography of Jakobshavn Isbrae, Greenland, and Byrd Glacier, Antarctica. Journal of Glaciology 60, 223 (2014), 813.<a href="#fnref:8" rev="footnote">&#8617;</a></p></li>
<li id="fn:9">
<p>Holt, J. W., M. E. Peters, S. D. Kempf, D. L. Morse, and D. D. Blankenship (2006), Echo source discrimination in single-pass airborne radar sounding data from the Dry Valleys, Antarctica: Implications for orbital sounding of Mars, J. Geophys. Res., 111, E06S24, doi:10.1029/2005JE002525.<a href="#fnref:9" rev="footnote">&#8617;</a></p></li>
<li id="fn:10">
<p>Peters, M. E., Blankenship, D. D., Carter, S. P., Kempf, S. D., Young, D. A., and Holt, J. W. Along-track focusing of airborne radar sounding data from West Antarctica for improving basal reflection analysis and layer detection. Geoscience and Remote Sensing, IEEE Transactions on 45, 9 (2007), 2725–2736<a href="#fnref:10" rev="footnote">&#8617;</a></p></li>
<li id="fn:11">
<p>Lambert, Fabrice, et al. &ldquo;Dust-climate couplings over the past 800,000 years from the EPICA Dome C ice core.&rdquo; Nature 452.7187 (2008): 616-619.<a href="#fnref:11" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What does networking look like?]]></title>
    <link href="http://lindzey.github.io/blog/2014/11/11/what-does-networking-look-like/"/>
    <updated>2014-11-11T06:46:00-06:00</updated>
    <id>http://lindzey.github.io/blog/2014/11/11/what-does-networking-look-like</id>
    <content type="html"><![CDATA[<p>As a student, I often heard that &ldquo;networking&rdquo; was the way to get a job. I didn&rsquo;t have a clear picture of what it involved, other than the oft-cited advice of &ldquo;invite people at your target company out for an informational interview over coffee.&rdquo;  The idea of setting up a coffee date with a stranger just because they work at a company that I&rsquo;m interested in felt devious and mercenary and awkward - as though I wouldn&rsquo;t be straight-up asking for a job, but kinda-sorta hoping that they&rsquo;d submit my name. I wish I&rsquo;d had better examples of what networking looked like, or how it could lead to a job.</p>

<!-- more -->


<p>I still struggle with networking (I&rsquo;m way too shy at conferences, not particularly active on any form of social media, tend to over-analyze follow-up emails), but I&rsquo;ve realized that my adventures in intentionally piecing together a series of internships and short term jobs over the past few years are an example of how networking has worked for a recent grad who hadn&rsquo;t even realized that what she was doing counted as networking.</p>

<p>So, in the interest of giving concrete examples, here are some things that went well for me:</p>

<p><strong>Organization 1</strong>: I&rsquo;d worked here before, years ago, and wanted to return for a short-term gig. It was a scary phone call to make, but I simply called my old mentor and asked if he had anywhere that I could be of use. After a few months of emailing, all the details came together and I wound up with an interesting project well-suited to my skills.</p>

<p><em>Moral</em>: Ask for what you want, somebody just might say yes.</p>

<p><strong>Organization 2</strong>: This one was the classic case where a professor had a contact in a company, and introduced a student in need of an internship to a recruiter looking for students. I had a great chat with the company, and would have taken the offered internship except for the problem that their bureaucratic rules were not a good fit with my timeline. Even after I turned down the immediate offer, the recruiter encouraged me to contact them again for a different internship cycle.</p>

<p><em>Moral</em>: It makes profs look good to recommend good students to a company, so let them know you&rsquo;re looking!</p>

<p><strong>Organization 3</strong>: There are only a few places in the country working on what I&rsquo;m interested in, and this one sounded very appealing to me. I asked a friend if he knew anybody there. He didn&rsquo;t but he knew somebody who knew one of the guys I wanted to work with, and they were both willing to pass along the introduction. It turned out that this organization didn&rsquo;t have anything that matched what I wanted, but a collaborator at another institution did. I was this.close to taking a summer research position with the collaborator, working in my ideal role, until it fell through thanks to international bureaucratic fun. After our first attempt fell through, I visited his lab again, and was introduced to another potential collaborator.</p>

<p><em>Moral</em>: Holy cow - 4 edges in the graph! It works like that?!</p>

<p>Later, I knew that I wanted an internship, and had my eye on a few companies in the bay area. I also had a few weeks of vacation, and friends I wanted to visit. So … I flew up there, having already arranged to see my friends and actually meet the researcher at Organization 3. This led to three other leads:</p>

<p><strong>Organization 4</strong>: They consistently published job postings for internships, and I&rsquo;d had my eye on them for a while, but had been procrastinating on sending in a cover letter. The friend from undergrad who I was staying with offered to introduce me, which led to an in-person interview on 2 days notice. While at that interview, I ran into <em>another</em> friend from undergrad who worked for a different group in the same company. I was roped into an impromptu interview with his bosses, who were also looking for interns, and wound up with offers from both groups.</p>

<p><strong>Organization 5</strong>: I had had a half-finished cover letter to this place sitting on my hard drive for at least 6 months, but hadn&rsquo;t had the guts to send it. It was my dream internship. A friend from grad school and I met for dinner, and he had interned there a year ago. It didn&rsquo;t even occur to me to ask for an introduction because while we had been in the same department, we only knew each other through extracurriculars. As soon as he heard I was looking for internships, he offered to introduce me to his previous boss. This contact moved too slowly for an in-person interview while I was in CA, but after two telephone calls I wound up with an offer that led to the best internship ever.</p>

<p><strong>Organization 6</strong>: I&rsquo;d never heard of them, but the same friend from grad school worked there and was excited about the company. He set up an informational interview for me (again on a few days notice), and I had a fun day talking with the founders and some of the engineering staff. We wound up not taking it any further - they were an early-stage startup, looking to hire full-time staff immediately, and I was firm in wanting a time-bounded internship to aid in my exploration. However - their recruiter contacted me later, once they were stable enough to actually have intern positions open.</p>

<p><em>Moral</em>: It&rsquo;s OK to say &ldquo;this isn&rsquo;t what I&rsquo;m looking for right now&rdquo;. &ldquo;Not right now&rdquo; doesn&rsquo;t have to mean &ldquo;not ever&rdquo;.</p>

<p><em>Moral2</em>: &ldquo;I&rsquo;m in town now, can we meet in the next week&rdquo; can be way more powerful than &ldquo;here&rsquo;s my resume, I&rsquo;m interested&rdquo;. I know that Organization #4 has a big pile of typical resumes/cover letters that they slog through, and I totally jumped the line.</p>

<p><strong>Organization 7</strong>: I went to a talk that I found stimulating - the speaker was working on problems related to what I was about to start a PhD on, but approaching them very differently. Afterwards, I milled around and eventually (awkwardly) introduced myself. As soon as I explained my interest, the speaker was effusively enthusiastic and invited me to visit her lab. This didn&rsquo;t go anywhere beyond a fun tour where I got to meet a number of research groups working in areas related to my own, but I include it as an example of how friendly people can be if you demonstrate an interest in their work, and how easy it was to get further introductions.</p>

<p><strong>Organization 8</strong>: I first heard of them while working with Organization 1, and thought that their project was just about the coolest thing ever, and I wanted to work on it. I didn&rsquo;t know if they were hiring, but I asked my mentor from Organization 1 to introduce me to the CEO of Organization 8. I flew to town on my own dime to visit family and chat with the CEO, with the goals of finding out if the project was as interesting as I thought and of getting on his radar. A few months later, I visited town again, and mentor #1 invited me to attend a meeting with CEO #8 (and most of the rest of his company). At this point, I explicitly told the CEO that I wanted to work for him and sent in a resume, but the logistics didn&rsquo;t work out for me to accept a position until a few months after that.</p>

<p>I had a fantastic two years where I accomplished everything that I&rsquo;d originally daydreamed of when deciding to take time off from grad school. (I wound up working with #1, #4, #5 and #8.) In that time, the only thing that I applied to directly was Hacker School - for everything else, the first contact was an introduction.</p>

<p>I have no idea if this is typical for what &ldquo;networking&rdquo; looks like for other recent grads, but I do know that I love my friends and that I have been very lucky. So far, for me, &ldquo;networking&rdquo; has simply been a side effect of keeping in contact with people I was going to hang out with anyways. Telling your friends that you&rsquo;re looking for a new gig doesn&rsquo;t have come across as a request for assistance - it happens naturally when updating them on your life, and that gives them an opportunity to help if they want to. I&rsquo;ve also been surprised by how effective it was to openly and consistently state my goals and motivations:</p>

<ul>
<li>The people I&rsquo;ve dealt with seemed to want to find a way that we could work together, even when my preferences were atypical: I had explicitly wanted short-term work, and turned down the longer-term gigs that were offered.</li>
<li>I never encountered any rancor as a result of my saying &ldquo;this doesn&rsquo;t fit with my goals right now - maybe we can work something out later?&rdquo; In most cases, the other party very explicitly left the door open for future collaboration.</li>
</ul>


<p>After reflecting on this, I&rsquo;ve flipped how I see an &ldquo;informational interview&rdquo;. Rather than an ill-disguised attempt to be referred for a job, it&rsquo;s a request to talk to somebody who is working on something that I&rsquo;m keenly interested in. When viewed that way, it doesn&rsquo;t feel at all mercenary, or like I&rsquo;d be struggling to come up with relevant questions. Instead, it would be an excuse to have a conversation that&rsquo;s worthwhile and entertaining on its own.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Visual Chronology of Robots]]></title>
    <link href="http://lindzey.github.io/blog/2014/11/01/a-visual-chronology-of-robots/"/>
    <updated>2014-11-01T04:22:00-05:00</updated>
    <id>http://lindzey.github.io/blog/2014/11/01/a-visual-chronology-of-robots</id>
    <content type="html"><![CDATA[<p>I was just updating my official resume, and felt like making a more fun version. Here are all of the robots that I’ve worked with and could find pictures of. In chronological order:</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/bob.jpg" title="" ></p>

<!-- more -->


<p>  <br/>
I have no idea &hellip;
(Bob! Named for his licence plate, 5BOB235.)</p>

<p>Bob! Bob was Team Caltech’s entry for the 2004 DARPA Grand Challenge, which was a race across the desert for fully autonomous vehicles. I wasn’t involved in that competition, but we used the vehicle for a course project and in early preparations for the 2005 DGC while waiting for Alice to be completed.</p>

<p>In 2005, I worked on a PID controller that calculated the appropriate steering and throttle/brake commands to keep Bob/Alice on the desired path. When I started working on this project, I’d assumed that the control theory would be the tricky part. Instead, I wound up spending most of my efforts characterizing/negotiating the interfaces. If new paths generated by the planner weren’t continuous with the robot’s current state, no amount of tuning the gains could fix the vehicle’s overall performance. This is a tricky balance of how far in front of the vehicle a trajectory should remain fixed: too short, and you get jerky control, too far, and your vehicle won’t be able to a avoid newly-detected obstacle. Similarly, if my output steering commands were too high frequency, we’d blow up the steering pump. Repeatedly. This led to negotiations with the vehicle team over how much responsiveness was worth sacrificing to protect the hardware.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/alice-launch.jpg" title="" >  <br/>
Launching for the 2005 DARPA Grand Challenge
(Alice! Once you have a Bob, the next one has to be Alice.)</p>

<p>Alice was Team Caltech’s entry for the 2005 DARPA Grand Challenge, which was another desert race, and for the 2007 DARPA Urban Challenge, which required following traffic laws while interacting with other cars/robots.</p>

<p>In 2007, my main project was a module that would use the 4 bumper-mounted lidars to track moving vehicles. I did this by segmenting the scan based on discontinuities, looking for L shaped segments in the 2D scan, and then associating nearby segments in sequential scans. By looking at the direction the segment was moving, I could determine which corner we were tracking, and use the corner coordinates for a more accurate representation of the vehicle’s location. I used a simple Kalman Filter to predict the motion of the vehicles when occluded, and even reassociate them with an existing track when they reappeared. The basic algorithm design was sound, but I struggled with the implementation, spending way too much time debugging. This experience made me realize that I needed to become a better programmer if I wanted to be a roboticist.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/modsnake.png" title="" >  <br/>
They can also climb legs.</p>

<p>Snake robots - used for a course project on reinforcement learning, where we attempted to learn gait parameters that would lead to more efficient locomotion.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/herb.jpg" title="" >
(image from <a href="https://www.facebook.com/HerbMugface">HERB’s facebook page</a> )</p>

<p>HERB! I had a summer internship at Intel Research, working with their Home Exploring Robotic Butler.</p>

<p>My first project was to determine the relative calibration between a spinning laser scanner and a camera and use that to generate colorized point clouds. Once everything was calibrated, I designed an algorithm that used Markov Random Fields to predict the occupancy status of occluded areas. In other words, I was trying to predict that a glass is circular after only having seen the front of it, which is an important capability if you want your robot to be able to manipulate previously-unmodeled objects.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/youbot.png" title="" >
(Kuka youBot)</p>

<p>I attended the 4th BRICS research camp on robot software architectures, where we used these in the context of a navigation task. The goal was to develop an architecture that would allow the robot to switch between navigation by following waypoints (whose relative spatial layout could and would change) and navigation in gridmaps with a fixed geometry. I wrote a state machine that was in charge of switching between the different navigation modes, and a controller that followed waypoints in the order specified, with the constraint that the next one in the list had to be visible from the current one.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/lagr.jpg" title="" >
(LAGR)</p>

<p>I was the technical lead for CMU’s entry into the TARDEC CANINE challenge. This was essentially a competition for robots to play fetch in the presence of moving obstacles. I designed the architecture that we used, and wrote the state machine that handled high-level control at each stage of the challenge. I also used this robot for a research project that investigated using Monte-Carlo Tree Search to plan paths that minimized distance traveled while maximizing information gain.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/m3pi.jpg" width="275">
<img class="left" src="http://lindzey.github.io/images/chronology_of_robots/sphero.jpg" width="225"></p>

<p>m3pi &amp; Sphero - I wanted to play with robots at home and at <a href="https://www.recurse.com/">Hacker School</a>; this is what I could afford. I wrote a <a href="https://github.com/lindzey/m3pi_ros">ROS driver</a> for the m3pi, and put together a simple demo where it navigated between goal waypoints, using an overhead kinect to estimate its position.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/pr2.jpg" title="" ></p>

<p>PR2! I had an internship at Bosch, working towards the far-off goal of having a robot clean up after me. Robot manipulation in clutter is an open problem; we hypothesized that if a human provided guidance for the initial segmentation, the rest of the task might become tractable. I designed and implemented a modular architecture for shared autonomy in the context of table clearing, with interchangeable human interfaces and segmentation algorithms.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/baxter.png" title="" ></p>

<p>Baxter! Also at Bosch. I didn’t use this robot for research, but it was involved in a prank.</p>

<p><img class="left" src="http://lindzey.github.io/images/chronology_of_robots/google.jpg" title="" >  <br/>
 (image from Google’s <a href="http://googleblog.blogspot.com/2014/04/the-latest-chapter-for-self-driving-car.html">blog post</a>)</p>

<p>Google car! Best internship ever. Some of the stuff I worked on even wound up in the <a href="http://www.youtube.com/watch?v=dk3oc1Hr62g">video</a> they released.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Features of a Successful Internship]]></title>
    <link href="http://lindzey.github.io/blog/2014/10/28/features-of-a-successful-internship/"/>
    <updated>2014-10-28T16:58:00-05:00</updated>
    <id>http://lindzey.github.io/blog/2014/10/28/features-of-a-successful-internship</id>
    <content type="html"><![CDATA[<p>Between my MS and starting a PhD, I did a few internships. One in particular stood out as a fantastic experience, and I&rsquo;ve been thinking about what they did so right.</p>

<!-- more -->


<p><strong>Things my mentor did:</strong></p>

<ul>
<li><p>When I showed up, he had a starter project in mind for me. It was a relatively concrete feature request that even had an interface stubbed out, which allowed me to get started immediately. It was also very well chosen as an entry point to the codebase - by the time I&rsquo;d finished this project, I&rsquo;d learned a lot and was in a much better position to work on production code.</p></li>
<li><p>My boss explicitly told me to ask for help after being stuck on anything for 15 minutes. Left to my own devices, I&rsquo;ll always struggle for longer than that, and I found that having an explicit guideline like that made me more productive.</p></li>
<li><p>My boss pointed me towards two things he wanted me to help improve (one in the simulation infrastructure, one in the production code), but I had a lot of freedom in deciding what the final solution should look like. He was also very receptive to suggestions I had for side projects: refactoring code, adding a related simulation feature, developing/improving library utilities, etc. I&rsquo;d go to him for help prioritizing my work, but what I found interesting was also an important factor.</p></li>
<li><p>At the end of my internship, my boss made me give a presentation. It was a pain, and preparing it ate up the better part of a week. However, I treated it like a job talk, and it was a great chance to show off what I&rsquo;d gotten done. Better yet - it was well attended, including by people outside of my direct team. This was yet another example of the whole group making it clear that the work I did as an intern was valued.</p></li>
</ul>


<p><strong>Project Culture:</strong></p>

<ul>
<li><p>Code reviews! I care a lot about writing clean code, and it&rsquo;s awesome to have other people look at what I do and suggest how to make it better. This is not exactly something that&rsquo;s emphasized in most corners of academia. This particular group cared deeply (obsessively?) about the state of their codebase, and were always willing to explain why they thought a particular design was better. I learned a lot about writing production quality c++.</p></li>
<li><p>They created a safe space for asking questions. Whenever I got stuck and went to somebody, they were patient and helpful. There&rsquo;s a huge difference in tone between &ldquo;you don&rsquo;t know how to \&lt;foo>?!?&rdquo; and &ldquo;Oh! let me show you how to \&lt;foo>!&rdquo;, and I always encountered the second. After Hacker School, I&rsquo;ve become much more aware and appreciative of such differences.</p></li>
<li><p>As soon as I was pointed towards a piece of the production code to try to improve, the whole team quickly gave me ownership - bug reports, questions, and hallway conversations came directly to me.</p></li>
<li><p>It didn&rsquo;t matter that my technical suggestions came from an intern - if they were good and I could back them up, they got implemented (and people were generous with credit for ideas!).</p></li>
<li><p>People consistently made a point of pointing out not only what needed to be fixed, but also what had been improved. After relatively minor fixes to some code, I got comments from the testers, my boss, my boss&rsquo;s boss, and my boss&rsquo;s boss&rsquo;s boss.</p></li>
<li><p>I found it particularly telling how well people reacted to my committing code that introduced faulty behavior during crunch time. My boss&rsquo;s boss was very matter-of-fact when he emailed me about it. The general tone of our discussion was: &ldquo;Yeah, bugs are going to happen. What could have protected us from this one?&rdquo;, and my boss tested and committed the quick fix I sent in from home. There was an utter absence of any blame, shaming, or other pressure.</p></li>
</ul>


<p><strong>Company-wide policies:</strong></p>

<ul>
<li><p>While they wouldn&rsquo;t tell me any details about what I&rsquo;d be working on while interviewing, I at least knew who my boss would be and a rough idea of what his team was responsible for. Without knowing what I&rsquo;d be working on, I wouldn&rsquo;t have been interested.</p></li>
<li><p>On day 1, I had access to just about the entire company&rsquo;s codebase. This practically screams &ldquo;we trust you.&rdquo; I&rsquo;ve had friends in internships where they weren&rsquo;t ever allowed to see the main codebase - they were put in their own sandbox, and their mentors were responsible for merging in any changes. From now on, I&rsquo;ll be asking about this, and a case like the 2nd company would be an absolute deal-breaker.</p></li>
<li><p>They paid competitively. Not that I even looked at this when considering internships, but it seemed correlated with how the company regards interns. And, you can bet that it&rsquo;s one of the first things I mention to other students who ask about the lower-paying internship I had: &ldquo;The people were nice, but you should know that Company B only paid &frac12; of what Company A did. So, if the projects are equally interesting to you, you can do better!&rdquo;</p></li>
</ul>


<p>I think that most of my points boil down to working with genuinely nice people, who made it clear that they respected and valued my contributions. Within the general priorities set out by my boss, I had a lot of autonomy, and at no point did I feel like my role or responsibilities were limited by being just an intern. In writing out this list, it also struck me how many of these were things a mentor doesn&rsquo;t have direct control over - most were at the team or even project level.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Would I do Hacker School Again?]]></title>
    <link href="http://lindzey.github.io/blog/2014/10/19/would-i-do-hacker-school-again/"/>
    <updated>2014-10-19T03:09:00-05:00</updated>
    <id>http://lindzey.github.io/blog/2014/10/19/would-i-do-hacker-school-again</id>
    <content type="html"><![CDATA[<p>Towards the end of our interview for the Hacker School study, <a href="http://blog.leahhanson.us/">Leah</a> asked me an interesting question: <em>Would you want to do Hacker School again?</em></p>

<p>And, my answer is: <em>I loved it, but no, not right now. Programming is no longer the thing I struggle most with.</em></p>

<!-- more -->


<p>When I applied to Hacker School, my driving insecurity was that I wasn&rsquo;t a good enough programmer. I&rsquo;d been in academia my whole life, and had struggled with producing code that would implement the algorithms I&rsquo;d designed. As a graduate student in robotics, I put a lot of effort into fixing this (to the almost-derision of some professors, who saw programming as beside the point) because I didn&rsquo;t want my programming skills to be the thing holding me back as a roboticist. By the time I took time off and headed to Hacker School, implementation had stopped being so painful, but I still had never had a real job or worked with &ldquo;real&rdquo; programmers - only other academics, even if on admittedly-cool projects. I&rsquo;d almost never had somebody look at my code and offer feedback.</p>

<p>So - Hacker School was a great fit for my goals at that point in life.</p>

<p>What did I get out of it?</p>

<ul>
<li>An awesome social atmosphere, very different from what I&rsquo;d been used to. There was another student there who taught me a lot. She was quiet, and I had to give her space to talk because she would never take it. But, given the space, she turned out to be incredibly enthusiastic, intelligent and motivated. How many other awesome people have I missed, simply because I never gave them this space? This environment was very different from the louder and more aggressive places I&rsquo;d learned to code. I&rsquo;ve discovered that I prefer it that way.</li>
<li>More confidence (reinforced by my subsequent internships) to just jump in and read the source code when something doesn&rsquo;t work as expected. I think that my tiny bit of work on byterun with <a href="http://akaptur.github.io/">Allison</a> was a turning point for that.</li>
<li>A better understanding of my own motivations. Somehow, simply reframing the thought from &ldquo;What <em>should</em> I do today?&rdquo; to &ldquo;What do I <em>most want</em> to work on?&rdquo; made me incredibly productive. As a graduate student, I have enough freedom to put this into practice!</li>
<li>A small glimpse as to how computers actually work. I&rsquo;d been insecure about my knowledge of their internals, but worked through NAND2Tetris with a friend. Now I at least have a framework for asking more detailed questions, and wound up having some great discussions about compilers that would have been absolutely over my head before doing this course.</li>
</ul>


<p>Between Hacker School and a few awesome internships/jobs, I am more secure in my implementation skills. This has allowed me to discover new areas that I want to learn more about. My driving insecurities now include:</p>

<ul>
<li>Statistics. I want to feel better about quantifying errors on the data products I produce, and be able to rigorously interpret them.</li>
<li>Ice-penetrating radar. I&rsquo;m not directly working with it, but the data I&rsquo;m working on will be compared with radar data products. I don&rsquo;t yet understand the nitty-gritty of the signal processing involved well enough to understand its limitations.</li>
<li>How to effectively work as part of a team, with legacy code and very ambitious deadlines. What&rsquo;s worth dealing with vs. fixing (as a technical AND political decision)? Given high-level goals, how should we organize our efforts as a team to get there step-by-step?</li>
</ul>


<p>My current position as both a roboticist and a scientist allows me to improve in these areas, and I couldn&rsquo;t be more excited.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NAND2Tetris]]></title>
    <link href="http://lindzey.github.io/blog/2014/09/04/nand2tetris/"/>
    <updated>2014-09-04T23:00:00-05:00</updated>
    <id>http://lindzey.github.io/blog/2014/09/04/nand2tetris</id>
    <content type="html"><![CDATA[<p>My most sustained project at Hacker School was working through NAND2tetris. I finished the whole course, with the exception of chapter 9, because I figured I didn’t need to write a game in Jack when I’d have to write an OS in it later. After seeing a current student ask for peoples’ experiences with the course, I realized that I had more to say than could fit easily in the HS chat program.</p>

<!-- more -->


<p><em>Why’d I do it?</em></p>

<p>I wanted to understand computers at a deeper level, and was insecure about being a roboticist yet not understanding how they work. I have programmed in C, but that’s as low-level as I’d previously gone. I’ve heard a lot of people whom I respect say that their compilers course is where they learned the most. However, when I was an undergrad, I skipped that one (along with Operating Systems) because I wasn’t actually a CS major and only audited the courses that sounded fun, like Algorithms and Decidability/Tractability.</p>

<p><em>How’d I do it?</em></p>

<p>Matt Davis and I worked through NAND2Tetris in our batch. We didn’t really work together, but did help get each other unstuck (especially at the start - their hardware emulator had a few quirks) and tried to stay roughly on the same timeline. I found it valuable to have somebody else to feel accountable to for finishing a chapter =) It was also useful to try to explain the concepts to each other, because that’s how I learn.</p>

<p>I think ~10 hrs/week is a reasonable amount of time to spend on it, and probably matches with what I averaged. (I skipped the video lectures and just read the book + used the slides for reference.) It’s also not something you have to <em>finish</em>. Even if you only get through the first few chapters, well, you’ve learned about how computers work down at the hardware level.</p>

<p><em>Was it worth it?</em></p>

<p>Of everything I did at Hacker School, I got the most out of this book.</p>

<p>I have a new appreciation for how interesting computers are … previously, I’d mostly viewed hardware (and compilers, and programming languages … really, anything other than higher-level robotics algorithms) as things that I’d prefer to learn as little about as possible.</p>

<p>I also feel like I have enough of an overview of how computers work at all levels to ask questions about what I don’t understand. For example, it opened the door for me to have some great conversations about compilers, while before HS I had a very fuzzy picture of what they even do. The simplicity of the system you implement means that it is very easy to come up with ways to extend the platform or design a new one. It could be interesting to try to move some more of the math into the hardware, or add features to the language.</p>

<p>NAND2tetris is very much a guided tour, meant for an undergrad-level class. It aims to be a broad survey that’ll let the student figure out where they’re interested studying in more depth. The system you build is very carefully designed to be as simple as possible while still being a capable computer. There is very little design involved - the homeworks were more about understanding the provided design (or following the signposts) and implementing it.</p>

<p>I worry that they may provide too much guidance, and that people can work through the assignments without really grokking them. This was especially true for the bytecode translator, which is possible to implement correctly without understanding why the features were needed. I wrote the code for this, but still had trouble remembering how to use the bytecode when I got to the compiler chapter. I often tried to start the projects without reading the final section in the relevant chapter (it always focused on the implementation, rather than the theory.)</p>

<p><em>Who would I recommend it to?</em></p>

<p>I think that the only pre-req for this course is an introductory programming course or two. At least, you need to program well enough that understanding the compiler’s operation is the tricky bit, rather than the actual implementation. So, if you were accepted to Hacker School the book probably won’t be above your level, but I did notice a dramatic difference in how much time different people needed for the problem sets based on how experienced we were with programming in general.</p>

<p>If you’ve already taken multiple classes covering microcontrollers/compilers/programming languages, it may be too basic for you (but might also be fun for tying everything together - I’d love to hear from somebody reading it from that perspective!)</p>
]]></content>
  </entry>
  
</feed>
